#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{changepage}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing other 1.2
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 25col%
\topmargin 20col%
\rightmargin 25col%
\bottommargin 20col%
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
RASD
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Purpose of the system and brief description of the problem
\end_layout

\begin_layout Standard
PowerEnJoy is an electrical car sharing service, based on a mobile application.
 The targets of the service, intended as users, are people that needs to
 move from a place to another within a city and requires a conveyance to
 move (because they don't have their own or simply can't use it).
\begin_inset Newline newline
\end_inset

A user can make a reservation for a car, using the mobile app and his/her
 account, and check for the availability and status of all the cars within
 his/her position, identified using GPS localisation, or a specific one,
 inserted manually by the user.
 As stated before, to access the service, the user must possess a private
 account, so a registration is needed.
 
\begin_inset Newline newline
\end_inset

The system provides the users a safe way (identification code) to access
 the cars, and the riding service and keeps trace of the status of all the
 cars.
\begin_inset Newline newline
\end_inset

Moreover, the system prizes or punishes a respectively good or bad behavior
 from the users, applying a discount or an overcharge on the cost of a ride.
 As esxample, if the user leaves the car without much battery, he/she will
 have to pay more than the standard cost of the ride, because the car will
 need to be charged and this operation has a cost.
 On the other hand, if a user plugs the car before ending the service, it
 receives a discount.
\begin_inset Newline newline
\end_inset

The system includes other functionalities, such as GPS based maps available
 in every car, an emergency procedure in case an accident occur during a
 ride and the notification of a car status if the user requested it.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The purpose of the system, referring to both the main and each car systems,
 is to offer a reliable, efficient and safe service, allowing the user to
 benefit of the offered electric cars when needed.
\end_layout

\begin_layout Subsection
Actors and stakeholders
\end_layout

\begin_layout Standard
We can clearly make a distinction between who asks for the service and who
 will actually use it.
\end_layout

\begin_layout Itemize
As in the Car2Go service, the stakeholder may be a corporation realted to
 the automotive world.
 However we don't exclude the possibility that a city government could ask
 for this software, to improve the transport condition of the city or simply
 to lessen the environmental impact of transport.
 
\end_layout

\begin_layout Itemize
The clients of the service are the so called users.
 User is whoever needs the car sharing service benefits of it.
\end_layout

\begin_layout Standard
We can also increase the scope to include more actors, implicitely present
 in the service: the cars, that plays a fundamental role of interaction
 between the user and the system (other than being a brainless transport),
 and the operators of companies that provides services like technical and
 emergency support.
\end_layout

\begin_layout Subsection
Goals
\end_layout

\begin_layout Itemize
[G1] Ensures that only the account owner can access his/her own account,
 if he/she is already registered.
\end_layout

\begin_layout Itemize
[G2] Allows the user to reserve an available car for up to one hour before
 the service starts and to take back such reservation before the picking
 up time expires.
\end_layout

\begin_layout Itemize
[G3] Allows the user to look for the available cars within an area that
 he/she specified, or in the nearby areas, for a possible reservation.
 If the car has a low battery charge, less than 20%, it does not appear
 on the user interface.
\end_layout

\begin_layout Itemize
[G4] Ensures that the user is able to trace/check the status of a car, available
 or already reserved, and receive push notifications about it.
\end_layout

\begin_layout Itemize
[G5] Ensures that the user is able to access, and open, the car he/she reserved,
 if he/she is in time.
\end_layout

\begin_layout Itemize
[G6] Ensures that the service, and the charge on the user, starts only when
 the engine of a car is ignited.
\end_layout

\begin_layout Itemize
[G7] Ensures that the user is informed real-time on the current cost of
 the service, when using it, and the possible discounts and overcharges.
\end_layout

\begin_layout Itemize
[G8] Ensures that the user knows the safe area around him/her, during the
 ride.
 
\end_layout

\begin_layout Itemize
[G9] Allows the user to press a button on the car to contact an operator
 in case of emergency, such as a car accident, a mechanical problem or sudden
 illness.
\end_layout

\begin_layout Itemize
[G10] Allows the user to leave the car but continue to use the service.
\end_layout

\begin_layout Itemize
[G11] Ensures that the user can end the service at any time.
 
\end_layout

\begin_layout Itemize
[G12] Ensures that the user receives a discount or overcharge when specific
 conditions are met.
\end_layout

\begin_layout Itemize
[G13] Ensures that the user is notified of the applied discount and overcharges
 once the service ends and payment is applied.
\end_layout

\begin_layout Itemize
[G14] Ensures that when the user picks up a car, it has no mechanical or
 electrical problem.
\end_layout

\begin_layout Subsection
Goals further description
\end_layout

\begin_layout Itemize
[G1] leaves out a particular scenario.
 The system won't actually be able to know if the person accessing the account
 is the real owner.
 A user can just give the credential to a friend, and this friend can access
 and use the service as if it was the real user.
 Such case, is a decision, or problem, of the user and the system can't
 do anything to avoid or simply recognise it.
\end_layout

\begin_layout Itemize
[G3] denies the possibility to use a car when the battery is very low, less
 than 20% of charge.
 This represents the behavior of a person in the real world.
 Nobody would chose a car if it would not be able to reach the destination.
 A user would prefer a charged car, to drive for longer distances.
\end_layout

\begin_layout Itemize
[G4] derives from the idea that multiple users may want to use tha same
 available car.
 Only one is able to make a reservation, but the others may be interested
 to check if the car is effectively taken by the reserving user.
 It could happen that he/she takes back the reservation or simply doesn't
 pick up the car within the reservation time.
 In such case, the car would be available once again and all the interested
 users will receive a notification about it.
 
\end_layout

\begin_layout Itemize
[G9] is one of the functional goals that provides the user a reliable way
 to 
\begin_inset Quotes eld
\end_inset

help
\begin_inset Quotes erd
\end_inset

 the service to work correctly.
 Being notified of the nearby zones to park, it will be unlikely for him/her
 to abandon the car midway.
\end_layout

\begin_layout Itemize
[G10] considers the real world, where a user may take the car to do shopping.
 The service provided should allow the user to stop and do his/her business.
\end_layout

\begin_layout Itemize
[G12] refers to the particular condition expressed in the project description.
 If the user takes on two ore more passengers, he/she receives a discount
 of 10% on the cost of the ride.
 If the user leaves the car with more than 50% of the battery available,
 a discount of 20% is applied.
 If the user plugs in the car before ending the service, the applied discount
 is 30% over the total.
 However, if the user leaves the car 3 km far from a safe area or with less
 than 20% of the battery available, he/she is overcharged of 30% of the
 cost of the ride.
\end_layout

\begin_layout Subsection
Glossary
\end_layout

\begin_layout Itemize
User: is the person that benefits of the car-sharing service.
 The user is able to make reservations, check cars and ask for notification
 using his/her own account.
 To register and be able to use the service, the user must provide name,
 surname, phone number, e-mail, payment information, such as a credit card
 number, and his/her Driver License.
 The user is, in fact, the person who drives a car.
\end_layout

\begin_layout Itemize
Car: is one of the electric car provided by the service.
 The car contains various sensors which are able to detect the number of
 passengers, the status of the mechanical and electrical components of the
 car.
 It also possess its own system, connected to the main system of the service.
 This system is costantly updated on the status of the car.
 The car has also a screen that makes possible an interaction between the
 user and the car system, and a button that the user can press in case of
 emergency.
\end_layout

\begin_layout Itemize
Mobile application: it is the app that the user has to install on his/her
 mobile device in order to use the service.
\end_layout

\begin_layout Itemize
Reservation: it's the process by which the user can make a request for a
 car.
 First, the user must access his/her own account.
 From there, he can insert an address or chose his location, via GPS, to
 search for available cars from the suggested zone.
 Lastly, he can request a specific car to use.
\end_layout

\begin_layout Itemize
Monitoring: it it the process by which the user can chose one or more cars
 to be notified about its availability.
 The monitoring only involves cars that are not already picked up and 
\end_layout

\begin_layout Itemize
GPS: global navigation satellite system that provides location and time
 information in all weather conditions, anywhere on or near the Earth where
 there is an unobstructed line of sight to four or more GPS satellites.
 
\end_layout

\begin_layout Itemize
Picking up time / Reservation time: it is the period of time between the
 time when the user reserves a car from his/her account and the unlocking
 of the car by the same user.
 The maximum reservation time, allowed by the system, is one hour.
\end_layout

\begin_layout Itemize
Reservation countdown: it is the countdown after which the user is charged
 of a fee if it has not picked up the car.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} Status: referred to a car, it is the set of the information that
 describes it.
 They include: 
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} Location
\end_layout

\begin_layout Plain Layout


\backslash
item{} Battery charge
\end_layout

\begin_layout Plain Layout


\backslash
item{} Money counter
\end_layout

\begin_layout Plain Layout


\backslash
item{} Components state
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Passenger: is a person who can benefit of the service without driving the
 car.
 The passenger can use a car only when an user is driving it, and it doesn't
 need to be registered to use the service.
\end_layout

\begin_layout Itemize
Technician: is the person dedicated to repair and fix the car.
 It is provided by an external company.
\end_layout

\begin_layout Itemize
Operator: is the person that communicates with the user whenever an accident
 happens during the service and emergency button on the used car is pressed.
 The operator contacts other services depending on which type of accident
 occurred, such as ambulance, police, firetrucks, technicians.
 As the latter ones, the operator is provided by an external company.
\end_layout

\begin_layout Itemize
Safe area: it is a specific area where the electric cars of PowerEnJoy service
 can park.
 The set of safe areas is pre-defined and owned by the company/society that
 requested the management system for the service.
\end_layout

\begin_layout Itemize
Special safe area: it is a safe area where power grid stations are installed.
\end_layout

\begin_layout Itemize
Power grid station: it is an installation that allows the recharge of an
 electric car.
\end_layout

\begin_layout Itemize
System: it is the new system to create.
 It refers to the software and hardware needed in order to make the service
 work.
 The system is composed of a database (or more than one) to store the users
 and cars information, and the software needed to manage users actions and
 the single cars.
\end_layout

\begin_layout Itemize
Car system: is the system, mostly hardware, contained in every car.
 It checks and elaborates the status of the car and interfaces the transport,
 the user and the system.
 The user can interact with the car thanks to an installed screen, that
 shows informations about the service cost, a GPS based map, discounts and
 so on.
 Every car system sends information to the system via 3G connection, and
 viceversa.
 
\end_layout

\begin_layout Itemize
Discount: is an amount of money that has to be subtracted from the ride
 cost of a user, at the end of the service, if certain conditions (described
 in section 1.1, goals specification 3) are met.
\end_layout

\begin_layout Itemize
Overcharge: is an amount of money that has to be added to the ride cost
 of a user, at the end of the service, if certain conditions (described
 in section 1.1, goals specification 3) are met.
\end_layout

\begin_layout Itemize
Ride: it is the journey in the electric car.
 It starts when the user turns on the car and ends when the user leaves
 the car and closes the open doors.
 In the way a ride is defined, its duration coincides with the period of
 time where the user is charged for the service.
\end_layout

\begin_layout Itemize
Service: it refers to the whole process of reservation, ride and payment
 of a car, done by the user.
\end_layout

\begin_layout Itemize
Push notification/ push message: it is a notification sent to a smartphone
 using the mobile application.
\end_layout

\begin_layout Itemize
SMS: short message service; it is a notification sent to a mobile phone,
 we need a GSM gateway to use it.
\end_layout

\begin_layout Itemize
GMS gateway: device that allows SMS text messages to be sent and/or received
 by email, from Web pages or from other software applications by acquiring
 a unique identifier from the mobile phone's Subscriber Identity Module,
 or SIM card.
\end_layout

\begin_layout Subsection
Text assumptions
\end_layout

\begin_layout Itemize
We do not consider the case where someone can use the credentials of someone
 else, maybe a friend: such possibility is purely user-related and the system
 has no way to control it.
\end_layout

\begin_layout Itemize
We should develop a mobile application able to use the position of a device
 through a GPS or asking it to the user.
\end_layout

\begin_layout Itemize
Users are asked to make a reservation before using an electric car.
 Other car-sharing service like Car2Go allow also a use without reservation,
 but such case is not contemplated.
\end_layout

\begin_layout Itemize
There must be some components that allow an interaction between the user
 and the car, to make the first able to access the second.
 We assume the existence of a numeric keypad connected to the internal car
 system.
 Such keypad is also used by technicians to unlock the car during repairs
 and controls.
\end_layout

\begin_layout Itemize
Users must first register to gain access to the main functionalities offered
 by the system.
\end_layout

\begin_layout Itemize
The car possesses a screen to make possible an interaction with the user
 and the car system.
\end_layout

\begin_layout Itemize
The ride fee calculated per minute depends on the situation.
 An higher fee is applied when using the car, while a lower fee is applied
 if the car is not parked in a safe zone and the service is still active.
 If the car is parked in a safe area, the service is free.
\end_layout

\begin_layout Itemize
We assume that the parking areas are provided by the PowerEnJoy owners.
\end_layout

\begin_layout Itemize
The system is able to control some functionalities of the cars, such as
 the door lock.
\end_layout

\begin_layout Itemize
The car possesses multiple sensors that allows, every moment, to know its
 status, such as battery charge, decay of the mechanical components or number
 of passengers.
\end_layout

\begin_layout Itemize
We assume that there are other societies that collaborate with the system
 of PowerEnJoy.
 Technicians, operators, and other actors belong to such companies.
\end_layout

\begin_layout Section
Overall description
\end_layout

\begin_layout Subsection
Interfaces description
\end_layout

\begin_layout Itemize
Interface with GSM provider to send SMS notifications to the users.
\end_layout

\begin_layout Itemize
Interface with the external staff.
 Technicians and operators are provided by a different company and the system
 needs to interact with them.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} Interface between the user and the car system.
 There are two levels of interaction:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} The user can check for general informations of a car via his/her
 account, on the app.
\end_layout

\begin_layout Plain Layout


\backslash
item{} The user has more detailed informations on the car, the service cost
 and the location during the ride, interacting with the car screen.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Interface between the user and the system, via app.
 The user is able to access the offered services thanks to the application.
\end_layout

\begin_layout Itemize
Interface between the car system and the system, to enable the communication
 of data.
\end_layout

\begin_layout Itemize
Interface between the system and the GPS map provider.
\end_layout

\begin_layout Itemize
Interface between the cars and the recharge stations, that enables the recharge
 of the vehicle.
 It is composed by a plug and sensors connected to the car system that are
 able to recognize if the car is plugged (and recharging).
\end_layout

\begin_layout Itemize
Interface between the cars and the people, both users and technicians.
 This interface refers to a device connected to the car system that is able
 to recognize codes and unlock the car.
\end_layout

\begin_layout Subsection
Product functions
\end_layout

\begin_layout Subsection
Constraints
\end_layout

\begin_layout Subsubsection
Regulatory policies
\end_layout

\begin_layout Standard
When registering, the system shows the user the license he/she has to accept
 in order to benefit from the offered services.
 
\begin_inset Newline newline
\end_inset

Treatment of personal data follows the rules described by the law (Law D.
 Lgs.
 196/2003 in Italy).
\begin_inset Newline newline
\end_inset

The system also asks the permission to use and manage sensible data such
 as position, mail and phone number, in order to achieve its purposes, respectin
g in every conditions and cases the privacy law.
\begin_inset Newline newline
\end_inset

The system mustn't use push notifications and SMSs to send SPAM and third
 party advertising, but can only use such means according to the offered
 services.
\end_layout

\begin_layout Subsubsection
Possible software limitations
\end_layout

\begin_layout Standard
Problem regarding APIs management and integration can arise, leading to
 major complexities of the system and delays in the development of the system
 software.
\begin_inset Newline newline
\end_inset

The software that manages the system may not implement all the needed functional
ities.
 Such problem is mostly due to a bad development.
\end_layout

\begin_layout Subsubsection
Hardware limitations
\end_layout

\begin_layout Standard
The mobile device owned by the user is subject to many problems, mostly
 regarding the connectivity of network and localization services:
\end_layout

\begin_layout Itemize
3G connection, to use the app
\end_layout

\begin_layout Itemize
GPS, to use particular services of the app, such as providing the user position
 to find available cars
\end_layout

\begin_layout Itemize
Space for app package on the device memory
\end_layout

\begin_layout Itemize
Battery consumption
\end_layout

\begin_layout Subsection
Proposed system
\end_layout

\begin_layout Standard
We will implement a client-server architecture, based on the common REST
 APIs, to manage the web application.
 A MySQL based database is needed to store the data of users and cars.
 A possible framework for the server is Mono, derived on the .NET Framework
 offered by Microsoft, but working on a large number of OS, such as iOS,
 Android, OSX and Microsoft.
 Lastly, the car interfaces with the user using some of its artifacts, such
 as the emergency button (User -> Car System -> System -> Operators), the
 car screen or the numeric keypad to access the car or to end the service.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ProposedSystem.png
	width 100col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Architecture
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Domain assumptions
\end_layout

\begin_layout Itemize
All the GPS localization services have no fault and always returns the correct
 position of a device (car, phone, tablet...).
\end_layout

\begin_layout Itemize
If a car is locked, nobody can access it.
 However, technicians are able to use a code to operate on it.
\end_layout

\begin_layout Itemize
The databases on which the system relies on works without problems (no data
 loss, no incoherence).
\end_layout

\begin_layout Itemize
Once a user is registered, the system won't accept any other registration
 with his/her data.
 In other words, a user can register only once.
\end_layout

\begin_layout Itemize
Once a user is registered, his/her information will be saved and present
 in the system database.
\end_layout

\begin_layout Itemize
All the notifications that a user can receive from his/her account are immediate
 and always working.
\end_layout

\begin_layout Itemize
All the updates of the status of a car are immediate and correct.
\end_layout

\begin_layout Itemize
A user will never leave the car in a zone unreachable by GPS localization
 or too far from the nearest safe area.
\end_layout

\begin_layout Itemize
A user will never leave the car with a door open, and neither the passengers
 will.
\end_layout

\begin_layout Itemize
A user will never leave a door open for more than ten minutes.
\end_layout

\begin_layout Itemize
Users will encounter no problems when accessing the car using a code.
\end_layout

\begin_layout Itemize
When registering, users will insert only Credit Card info or Debit Card
 info as methods of payment.
\end_layout

\begin_layout Itemize
Technicians and operators are always available and provided by a third party
 agent.
\end_layout

\begin_layout Itemize
Passwords and codes are unique.
\end_layout

\begin_layout Itemize
Discounts and overcharges are always calculated and applied in the correct
 way.
\end_layout

\begin_layout Itemize
Technicians and other services (police, ambulances, firetrucks) will reach
 the location addressed by the user/operator in the shortest possible time.
\end_layout

\begin_layout Itemize
Every car is able to detect it a mechanical/electrical problem occurs, and
 modify its internal status.
\end_layout

\begin_layout Itemize
The set of safe areas for parking cars is pre-defined by the management
 system.
\end_layout

\begin_layout Section
Requirements
\end_layout

\begin_layout Subsection
Functional requirements
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G1] Ensures that only the account owner can access his/her own account,
 if he/she is already registered:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R1.1] When the user registers, the system shall send him/her a mail
 or an SMS containing an unique code, that she/he can use to access his/her
 account.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R1.2] When the user inserts is credential to log into his/her account,
 the system shall verify the correctness of the inserted data, the unique
 code expressed in requirement [R1.1].
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G2] Allows the user to reserve an available car for up to one hour
 before the service starts and to take back such reservation before the
 picking up time expires:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R2.1] When the user selects the option to reserve a car, the system
 shall verify if it is already reserved.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R2.2] When the user selects the option to reserve a car, the system
 shall check if the reservation time is less than one hour.
 
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R2.3] If the check described in requirement [R2.2] is negative, meaning
 that the user expressed a reservation time longer than one hour, the system
 shall reject the user's request.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R2.4] When the user selects the option to reserve a car, the system
 shall verify if it the user has already made a reservation.
 If he/she has, the system shall notify him/her with a message on the mobile
 screen.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R2.5] If the reservation time expires, meaning that the user didn't
 reach the car in time, the system shall cancel the user reservation and
 charge him/her of 1 EUR.
 The system shall also send a push notification the user to inform him/her
 of the fee.
 
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R2.6] When the user makes a reservation for an available car, the
 system shall provide him/her an option to take back the reservation, from
 his/her account.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R2.7] When the user picks up the car or the reservation time expires,
 the system shall disable the option to take back the reservation.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R2.8] When the user picks up the car, the car system shall notify
 the system and disable the reservation countdown.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G3] Allows the user to look for the available cars within an area
 that he/she specified, or in the nearby areas, for a possible reservation.
 If the car has a low battery charge, such as less than 20
\backslash
%, it does not appear on the user interface:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R3.1] The system shall be able to detect the user position, using
 GPS localisation of the device he/she is using (automatic localisation).
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R3.2] The system shall be able to recognise and locate the address
 given by the user (manual localisation).
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R3.3] The system shall display a list, interfaced to the user as
 a map, of the available cars with more than 20
\backslash
% of the battery charge, within 5km from the given location.
 
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R3.4] For every car in the list described in requirement [R3.3], the
 system shall provide essential information, as battery charge, estimated
 working distance, location, distance from the given address/current user
 location, maximum number of passengers.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G4] Ensures that the user is able to trace/check the status of a
 car, available or already reserved, and receive push notification about
 it:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R4.1] Along with requirement [R3.3], the system shall also display
 a list of already reserved car, but not already picked up.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R4.2] When the user touches a car on the map of his/her app, the
 system shall provide him/her two options regarding that car: reservation
 or monitoring, depending on the car availability.
 Moreover, the status of the car shall be displayed.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R4.3] When the status of a car is updated - from reserved to available,
 from reserved to picked up and from available to reserved - the system
 shall notify all the users that made a monitoring request, grouped in a
 list, on that car.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R4.4] When the user decides to not be notified on a car for which
 he/she previously requested a monitoring, the system shall delete the user
 from the list of users that wants to check the status of that car.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R4.5] When a car is picked up, the system shall notify the users
 that made the monitoring request, as described in [R4.3] and after that,
 delete the list.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G5] Ensures that the user is able to access, and open, the car he/she
 reserved, if he/she is in time:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R5.1] When the user communicate via his/her account that he/she's
 nearby the car he/she reserved, the system shall send an SMS or a mail
 to the user, containing a unique code to unlock the car.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R5.2] When the user communicate via his/her account that he/she's
 nearby the car he/she reserved, the system shall make the car unlockable
 only by the code descripted in requirement [R5.1].
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R5.3] If the user doesn't reach the car within the reservation time
 and he/she already received the code to open it, the system shall reset
 the sequence needed to open the car, making the user unable to access it.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G6] Ensures that the service, and the charge on the user, starts
 only when the engine of a car is ignited:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R6.1] When the user is in the turned off car and uses its ignition
 key, the system shall start the car, initializing its screen and the car
 internal system.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R6.2] When the user is in the turned off car and uses its ignition
 key, the system shall begin to charge the user per minute, after having
 initialized the internal system of the car, as stated in requirement [R6.1].
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G7] Ensures that the user is informed real-time on the current cost
 of the service, when using it, and the possible discounts and overcharges:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R7.1] Every minute, the car system shall increase the money counter
 and display its value on the screen of the car, depending on its status.
 Different rates are applied if the car is turne on or off while the service
 is active.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R7.2] When the car system detects that more than two passengers are
 on the car, it shall display on the car screen a message about a possible
 10
\backslash
% discount on the ride cost if the condition persists.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R7.3] When the car system detects that the battery charge of the
 car is above 50
\backslash
%, it shall display on the car screen a message about a possible 20
\backslash
% discount on the ride cost if the condition persists.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R7.4] When the car system detects that the battery charge of the
 car is below 20
\backslash
%, it shall display on the car screen a message about a possible 30
\backslash
% overcharge on the ride cost if the condition persists.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R7.5] When a condition described in requirements [R7.2], [R7.3] and
 [R7.4] is not met, the car system shall display no message on the car screen
 about discounts/overcharges.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G8] Ensures that the user knows the safe areas around him/her during
 the ride: 
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize} 
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R8.1] When the service starts, the car system shall elaborate a detailed
 map of a 10km radius zone from the car location, using GPS.
 The map status in continuosly elaborated during the ride.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R8.2] Referring to requirement [R8.1] the car system shall show the
 map on the car screen, along with the car status, as stated in requirement
 [R7.X].
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R8.3] When the service starts, in addition to requirement [R8.1],
 the system shall inform the car system of the location of the safe areas,
 distinguishing between normal safe areas and the ones with power grids.
 Only the safe areas with available parking places are shown.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G9] Allows the user to press a button on the car to contact an operator
 in case of emergency, such as a car accident, a mechanical problem or sudden
 ilness:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R9.1] When the user presses the button, the system shall notify an
 operator on the location of the car and its status.
 The operator belongs to an outer service provider agency.
 
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R9.2] When the user presses the button, the system shall arrange
 a call between the user inside the car and the operator of requirement
 [R9.1].
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R9.3] If the user presses the button multiple times in a short period,
 less than 2 minutes, the system shall recognise only the first and start
 the procedure described in the requirements [R9.1] and [R9.2].
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R9.4] When the user presses the button, the car system shall end
 the service (following the ending procedure) and turn off the car.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G10] Allows the user to leave the car but continue to use the service.
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R10.1] When the user leaves and turns off the car, the system shall
 apply a new rate over the ride cost.
 When the user turns on the car once again, the old rate is applied once
 again and the riding service continues.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G11] Ensures that the user can end the service at any time:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R11.1] When the user leaves and turns off the car, the car system
 shall check if the car is located in a safe area or not, communicating
 with the system.
 
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R11.2] If the user has left the car in a safe area, the car system
 shall stop the charging counter and save the car status.
 
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R11.3] If the user has left the car in a non safe area, the car system
 shall continue charging the user with a different rate.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R11.4] When the user has left the car, closed all the doors, and
 inserted into the numeric keypad the code he/she used to access the car,
 the car system shall communicate the car status to the system.
 The system shall execute the payment process, communicate the car system
 to lock the car.
 
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R11.5] When the car system has locked the car and informed the system,
 the latter shall update the car status in the main database, and tag the
 car available once again.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G12] Ensures that the user receives a discount or overcharge when
 specific conditions are met:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R12.1] When the user uses the access code to end the service and
 the car system provided the car status to the system, the system shall
 check the battery of the used car.
 If more than 50
\backslash
% remains the system shall apply a discount of 20
\backslash
% on the cost of the ride with that car.
 If less than 20
\backslash
% remains, the system shall apply an overcharge of 30
\backslash
% on the cost of the ride with that car.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R12.2] When the user uses the access code to end the service and
 the car system provided the car status to the system, the system shall
 check the number of passengers.
 If it is more than two the system shall apply a discount of 10
\backslash
% on the cost of the ride with that car.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R12.3] When the user uses the access code to end the service and
 the car system provided the car status to the system, the system shall
 check if the car is plugged into a power grid.
 If such condition is met and the car is located in a safe-area, the system
 shall apply a discount of 30
\backslash
% on the cost of the ride with that car.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R12.4] When the user uses the access code to end the service and
 the car system provided the car status to the system, if the car it is
 located at more than 3km from the nearest safe area, the system shall apply
 an overcharge of 30
\backslash
% on the cost of the ride with that car.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G13] Ensures that the user is notified of the applied discount and
 overcharges once the service ends and payment is applied:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R13.1] When the system applies the payment process on the user, it
 shall inform the user with a push notification of the applied discount
 and overcharges, based on the requirements [R12.X].
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [G14] Ensures that when the user picks up a car, it has no mechanical
 or electrical problem:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R14.1] When a car detects a problem, the car system shall inform
 the main system of the new status.
 The system shall then contact third party technicians, giving them the
 location of the car and a unique code to access it.
 Moreover, the system shall tag the car as unavailable.
\end_layout

\begin_layout Plain Layout


\backslash
item{} [R14.2] When the car system notifies the main system that all the
 problems are solved, the system shall update the car status, reset the
 access code of the car and tag it as available.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Non functional requirements
\end_layout

\begin_layout Subsubsection
Usability
\end_layout

\begin_layout Itemize
[R15] The system shall provide different languages that the users can chose.
\end_layout

\begin_layout Itemize
[R16] Both the mobile app and the car screen shall use different way to
 represent safe area and special areas with power grid stations on the maps.
\end_layout

\begin_layout Itemize
[R17] The mobile application shall be installable on different OS.
\end_layout

\begin_layout Itemize
[R18] Along with the push notifications, the mobile application shall emit
 a brief sound.
\end_layout

\begin_layout Itemize
[R19] The system shall provide trivial information about the service, such
 as discounts and overcharges conditions, rate table and contacts.
\end_layout

\begin_layout Subsubsection
Performance
\end_layout

\begin_layout Standard
All the possible issues regarding the performance of the whole system (system,
 mobile app and car systems) are already covered in the domain assumptions
 and as such not considered as requirements.
 
\end_layout

\begin_layout Itemize
Operations are elaborated and completed without delays and in a short amount
 of time.
 With short we mean a time comparable with the times of the current systems.
 The discount calculation won't take hours, as example.
\end_layout

\begin_layout Itemize
The menus and screens of all the devices will be smooth and without graphical
 problems.
\end_layout

\begin_layout Subsubsection
Interfaces mockup
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename AppMockupV1.png
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Map search mockup
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename AppMockupV2.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Registration mockup
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Modeling
\end_layout

\begin_layout Subsection
Scenario identifying
\end_layout

\begin_layout Standard
In this sub-section we present some of the possible situations that can
 happen.
\end_layout

\begin_layout Subsubsection
Scenario 1
\end_layout

\begin_layout Standard
Lilith just finished her work and can not wait to go home.
 However her car had some problems in the past few days and this morning
 Lilith decided to have it fixed.
 She opens her PowerEnJoy app on her phone and logs in her personal account.
 From there, she searches for the available cars around her.
 Fortunately, Lilith finds a car 500 meters from her position.
 The car is available and with a high battery charge, 75%.
 Lilith makes the reservation, specifying that in about half of an hour
 she will pick up the car.
 It just takes 20 minutes to reach the car and Lilith uses a special option
 on her page to receive via SMS a special code to unlock the car.
 The girl picks up the car and drives, enjoying the ride.
 She parks the car in the nearest safe area from her home, ends the service
 using the previous code and walks away.
\end_layout

\begin_layout Subsubsection
Scenario 2
\end_layout

\begin_layout Standard
Mitch needs to go pick up his son at the elementary school and wants to
 use the PowerEnJoy service.
 He opens the app, logs in and reserves a car.
 Lilith just got out of her office and needs to go shopping for some food.
 She lend her car to her younger brother and because she is already accustomed
 to the PowerEnJoy service, she immediately logs in her account and searches
 for an available car.
 However, there is only one car in the neighborhood and it is already reserved
 (by Mitch).
 Lilith is faithful that the one that reserved it will have some problems
 and take back the reservation, so she requests to monitor the car and receives
 notifications about it.
 Meanwhile Mitch receives a phone call from her wife, telling him that she
 already picked up their son.
 The reservation time still hasn't expired yet and Mitch is able to take
 back his reservation.
 Lilith receives then a notification on her cellphone that the car she was
 monitoring became available.
 Happy about how things turned out, she reserves the car, goes pick it up
 and drives to a shopping centre.
\end_layout

\begin_layout Subsubsection
Scenario 3
\end_layout

\begin_layout Standard
Mitch and his wife are going on a date and they are using a car offered
 by the PowerEnJoy service.
 Only Mitch needed to log in his account and make the reservation, before
 picking up the car, because he is the one who drives, while his wife is
 only a passenger.
 Mitch's wife is enjoying the ride but suddenly shouts to her husband to
 stop the car immediately: they just passed in front of a flower shop, and
 she loves flowers.
 Mitch satisfies the request of his wife, parks the car, after they have
 exited, he locks it with the ignition key.
 They pass about an hour in that shop, having fun.
 After that, Mitch opens the car and starts driving again, continuing the
 rest of the date with his wife.
\end_layout

\begin_layout Subsubsection
Scenario 4
\end_layout

\begin_layout Standard
Lilith and her two sisters just got out of the gym and wants to go eat something.
 Hilda, one of the sisters, suggests a nice restaurant but it's pretty far
 from them, and they don't want to catch a bus to go there.
 Lilith tells then her sisters about PowerEnJoy and shows them how to make
 a reservation.
 Fortunately they find an available car just 100 meters from them.
 They go pick up the car and Lilith, the one who made the reservation, drives
 to the restaurant.
 Realizing that they will spend a lot of time there, Lilith decides to end
 the service when exiting the car, inserting once again the code she used
 to access the car.
 During the meal, Lilith realizes that after having picked up the car she
 turned off her phone.
 Once she turns it on, she sees that not long ago, just after the end of
 the service, she received a notification about the cost of the ride and
 its discounts.
 However, what she sees is unexpected: she received a discount because she
 took two passengers, her sisters, in the car, but she also had an overcharge
 of 30% because she parked the car 5 km away from the nearest safe area.
 Hilda laughing says: 
\begin_inset Quotes eld
\end_inset

I told you it was pretty far!
\begin_inset Quotes erd
\end_inset

.
 Poor Lilith, looks like she won't enjoy her meal after all.
\end_layout

\begin_layout Subsubsection
Scenario 5
\end_layout

\begin_layout Standard
Lilith has been working for 10 straight hours and feels very tired.
 She opens her PowerEnJoy application, searches for the available cars near
 her and reserves one.
 After having picked up the car using a special code received via SMS, she
 starts driving.
 Unfortunately, when waiting at a semaphore, someone collides with the car
 that Lilith is driving.
 No one is hurt, but boh the cars are in a bad shape.
 Lilith knows what to do and quickly presses the emergency button on the
 car and after a few seconds she is able to speak with an operator to explain
 the situation.
 The person that picks up the emergency call is Marie, that asks Lilith
 information about the accident, such as location, type of problem and general
 information.
 After that, Marie contacts a society that allocates some technicians and
 send them to the accident point.
 If needed, Marie contacts also police, ambulances and firefighters.
 Lilith doesn't have to worry: when she pressed the button, the service
 ended and she doesn't have to pay more than needed.
 Unlucky Lilith, looks like she won't be able to relax after her hard day.
\end_layout

\begin_layout Subsubsection
Scenario 6
\end_layout

\begin_layout Standard
Mitch and his wife are thinking to go on a vacation, but they are undecided
 about the destination.
 The travel agency isn't far from their home so they decide to book an electric
 car and use it.
 Mitch opens the PowerEnJoy application, searches for the available cars
 and find one available.
 After having reserved it, requested the code to access it, and picked it
 up, he drives, directed to the destination.
 Having used it a lot of times, Mitch knows the rate of the service, calculated
 per minute, and realizes that on his credit card there isn't enough money
 to pay the ride.
 However he also knows all the possible discounts and to spend less he parks
 the car in a safe zone with a power grid station and plugs it to recharge
 the battery.
 Luckily for him, he also left the car with more than 50% of the battery,
 so as soon as he ends the service, he receives a notification on his phone
 about the 30% discount due to the plugging in and 20% due to the battery
 level.
 Mitch is very happy because he only payed half of the cost, but so isn't
 his wife: to receive the first discount he parked 2km away from the travel
 agency, so they now have to go by feet.
 
\end_layout

\begin_layout Subsubsection
Scenario 7
\end_layout

\begin_layout Standard
Lilith and her sister Hilda are talking about the services offered by PowerEnJoy.
 Lilith is actually a registered user and she appreciates the car sharing
 service, so she decided to invite her sister and make her register to benefits
 of PowerEnJoy.
 Lilith explains that in order to register, Hilda must insert in the app,
 under the registration section, her name, surname, number phone, mail,
 Driver Licence informations (number and postcode) and the optional fiscal
 code (of the ID Card).
 Hilda inserts all the information carefully and without errors, and after
 less then a minute, she receives an SMS and a mail containing the password
 to log in to her personal area of the app.
\end_layout

\begin_layout Subsection
UML models
\end_layout

\begin_layout Subsubsection
Use case diagram
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename UseCaseDiagram.png
	lyxscale 40
	scale 29

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Use case diagram, portraying all the functionalities that the user expects
 from the service
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Use case descriptions
\end_layout

\begin_layout Standard

\series bold
Name:
\series default
 Normal usage of the service
\begin_inset Newline newline
\end_inset


\series bold
Actors:
\series default
 User (Lilith, Scenario 1)
\begin_inset Newline newline
\end_inset


\series bold
Entry conditions:
\series default
 The user is already registered to the application.
\begin_inset Newline newline
\end_inset


\series bold
Flow of events:
\end_layout

\begin_layout Itemize
The user logs in the app using his/her credentials.
\end_layout

\begin_layout Itemize
The user searches for an available car using a special section of the app.
\end_layout

\begin_layout Itemize
The user selects an available car and inputs the time he/she thinks will
 be necessary to reach the car and pick it up.
\end_layout

\begin_layout Itemize
The user uses a special option on the app that allows him/her to communicate
 that he/she's nearby and needs the code to access the car.
\end_layout

\begin_layout Itemize
The system sends the user an SMS or mail containing the access code.
\end_layout

\begin_layout Itemize
The user uses the received code to access the car.
\end_layout

\begin_layout Itemize
The user turns on the car and drives.
\end_layout

\begin_layout Standard

\series bold
Exit conditions:
\series default
 The user exits the car, and uses again the code needed to open it.
\begin_inset Newline newline
\end_inset


\series bold
Exceptions: 
\end_layout

\begin_layout Itemize
The credentials furnished by the client are not correct.
 In this case the system doesn't redirect the user to the main page of the
 app but notifies him/her with an error message on the screen.
\end_layout

\begin_layout Itemize
The user doesn't pick up in time the car, so it has to pay a fee of 1 EUR.
 If the user already received the code to access the car, the system invalidates
 it.
\end_layout

\begin_layout Standard
\align left

\series bold
\begin_inset space \hspace{}
\length 15col%
\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0col%"
width "70col%"
height "0.5pt"

\end_inset


\series default

\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

Name:
\series default
 Cancellation of a reservation
\begin_inset Newline newline
\end_inset


\series bold
Actors:
\series default
 User (Mitch, scenario 2)
\begin_inset Newline newline
\end_inset


\series bold
Entry conditions:
\series default
 The user is already registered to the application.
\begin_inset Newline newline
\end_inset


\series bold
Flow of events:
\end_layout

\begin_layout Itemize
The user logs in the app using his/her credentials.
\end_layout

\begin_layout Itemize
The user searches for an available car using a special section of the app.
\end_layout

\begin_layout Itemize
The user selects an available car and inputs the time he/she thinks will
 be necessary to reach the car and pick it up.
\end_layout

\begin_layout Itemize
Before the reservation time expires, the user can select the cancellation
 option from his/her app.
\end_layout

\begin_layout Standard

\series bold
Exit conditions:
\series default
 The user cancels the reservation he/she previously made.
\begin_inset Newline newline
\end_inset


\series bold
Exceptions: 
\end_layout

\begin_layout Itemize
The credentials furnished by the client are not correct.
 In this case the system doesn't redirect the user to the main page of the
 app but notifies him/her with an error message on the screen.
\end_layout

\begin_layout Itemize
The user doesn't pick up in time the car, so it has to pay a fee of 1 EUR
 and cannot cancel the reservation anymore.
\end_layout

\begin_layout Standard
\align left

\series bold
\begin_inset space \hspace{}
\length 15col%
\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0col%"
width "70col%"
height "0.5pt"

\end_inset


\series default

\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

Name:
\series default
 Monitoring of cars
\begin_inset Newline newline
\end_inset


\series bold
Actors:
\series default
 User (Lilith, scenario 2)
\begin_inset Newline newline
\end_inset


\series bold
Entry conditions:
\series default
 The user is already registered to the application and has already logged
 in.
\begin_inset Newline newline
\end_inset


\series bold
Flow of events:
\end_layout

\begin_layout Itemize
The user searches for the cars, available or not, within a certain zone,
 that could be his/her position or a specific address.
\end_layout

\begin_layout Itemize
The user selects the cars she wants to monitor.
\end_layout

\begin_layout Itemize
Every time that a car's status changes, the user receives a notification
 on her phone with the new status of that car.
\end_layout

\begin_layout Standard

\series bold
Exit conditions: 
\series default
The user stops monitoring a determined car.
\series bold

\begin_inset Newline newline
\end_inset

Exceptions
\series default
: 
\end_layout

\begin_layout Itemize
The credentials furnished by the client are not correct.
 In this case the system doesn't redirect the user to the main page of the
 app but notifies him/her with an error message on the screen.
\end_layout

\begin_layout Itemize
The user doesn't pick up in time the car, so it has to pay a fee of 1 EUR
 and cannot cancel the reservation anymore.
\end_layout

\begin_layout Standard
\align left

\series bold
\begin_inset space \hspace{}
\length 15col%
\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0col%"
width "70col%"
height "0.5pt"

\end_inset


\series default

\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

Name:
\series default
 Temporary stop by
\begin_inset Newline newline
\end_inset


\series bold
Actors:
\series default
 User (Mitch, scenario 3)
\begin_inset Newline newline
\end_inset


\series bold
Entry conditions:
\series default
 The registered user unlocks the reserved car and turns it on.
\begin_inset Newline newline
\end_inset


\series bold
Flow of events:
\end_layout

\begin_layout Itemize
The user turns on the car and drives.
\end_layout

\begin_layout Itemize
The user decides to stop the car for a certain amount of time, still wanting
 to benefit of the service.
\end_layout

\begin_layout Itemize
The user extracts the key from the car after having turned it off.
\end_layout

\begin_layout Itemize
The system checks if the car is parked in a safe area or not.
 If it is, the halt has no further cost, otherwise the system changes the
 service fee (lowering it, because the user isn't consuming battery).
\end_layout

\begin_layout Standard

\series bold
Exit conditions:
\series default
 The user unlocks the car and turns it on, to continue driving or ends the
 service using the access code of the car.
\begin_inset Newline newline
\end_inset


\series bold
Exceptions: 
\end_layout

\begin_layout Itemize
Before stopping by, the user realizes that the car has not enough battery
 to continue the trip.
 He/she can find a power grid or end the service.
\end_layout

\begin_layout Standard

\series bold
\begin_inset space \hspace{}
\length 15col%
\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0col%"
width "70col%"
height "0.5pt"

\end_inset


\series default

\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

Name:
\series default
 Bonuses application
\begin_inset Newline newline
\end_inset


\series bold
Actors:
\series default
 User (Lilith and her sisters, scenario 4; Mitch, scenario 6)
\begin_inset Newline newline
\end_inset


\series bold
Entry conditions:
\series default
 The registered user reserved a car, picked it up and is about to end the
 service.
 
\begin_inset Newline newline
\end_inset


\series bold
Flow of events:
\end_layout

\begin_layout Itemize
The user parks the car, exits and uses the access code to end the service.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} The system checks if the conditions to gain a discount or overcharge
 are met:
\end_layout

\begin_layout Plain Layout


\backslash
begin {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item{} For the majority of the ride there were more than two passengers,
 10
\backslash
% discount.
\end_layout

\begin_layout Plain Layout


\backslash
item{} When the service ended, the car had more than 50
\backslash
% of the battery filled, 20
\backslash
% discount.
\end_layout

\begin_layout Plain Layout


\backslash
item{} When the service ended, the car had less than 20
\backslash
% of the battery filled, 30
\backslash
% overcharge.
\end_layout

\begin_layout Plain Layout


\backslash
item{} When the service enede, the car was plugged into a power grid station,
 30
\backslash
% discount.
\end_layout

\begin_layout Plain Layout


\backslash
item{} When the service ended, the car was parked more than 3km from the
 nearest safe area, 30
\backslash
% overcharge.
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\begin_layout Plain Layout


\backslash
end {itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The system calculates the new cost of the ride, based on the applied discounts/o
vercharges.
\end_layout

\begin_layout Standard

\series bold
Exit conditions:
\series default
 The system sends push notifications to the user, informing him/her of the
 total cost of the ride and the applied discounts/overcharges.
\end_layout

\begin_layout Standard

\series bold
\begin_inset space \hspace{}
\length 15col%
\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0col%"
width "70col%"
height "0.5pt"

\end_inset


\series default

\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

Name:
\series default
 Emergency handling
\begin_inset Newline newline
\end_inset


\series bold
Actors:
\series default
 User (Mitch, scenario 5)
\begin_inset Newline newline
\end_inset


\series bold
Entry conditions:
\series default
 The registered user reserved a car and picked it up.
\begin_inset Newline newline
\end_inset


\series bold
Flow of events:
\end_layout

\begin_layout Itemize
The user turns on the car and drives.
\end_layout

\begin_layout Itemize
An accident occurs, that can be a sudden illness of the user, a collision
 or a malfunction of the car.
\end_layout

\begin_layout Itemize
The user presses the emergency button.
\end_layout

\begin_layout Itemize
The systems redirects the user call to an available operator, that can now
 talk with the user.
\end_layout

\begin_layout Itemize
After having asked information about the accident, the operator contacts
 other services, as ambulances, police or technicians to go at the accident
 location.
\end_layout

\begin_layout Standard

\series bold
Exit conditions:
\series default
 The needed employees arrive on site (where the accident occurred).
\begin_inset Newline newline
\end_inset


\series bold
Exceptions: 
\end_layout

\begin_layout Itemize
There is no accident during the drive.
\end_layout

\begin_layout Itemize
The button is not working.
\end_layout

\begin_layout Standard

\series bold
\begin_inset space \hspace{}
\length 15col%
\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0col%"
width "70col%"
height "0.5pt"

\end_inset


\series default

\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

Name:
\series default
 Registration
\begin_inset Newline newline
\end_inset


\series bold
Actors:
\series default
 User (Hilda, scenario 7)
\begin_inset Newline newline
\end_inset


\series bold
Entry conditions:
\series default
 The user downloaded and installed the app.
\begin_inset Newline newline
\end_inset


\series bold
Flow of events:
\end_layout

\begin_layout Itemize
The user starts the app.
\end_layout

\begin_layout Itemize
The user selects the registration option from the main menu of the app.
\end_layout

\begin_layout Itemize
The user inserts data in order to complete the registration:
\end_layout

\begin_deeper
\begin_layout Itemize
Name and surname
\end_layout

\begin_layout Itemize
Fiscal code (optional)
\end_layout

\begin_layout Itemize
Phone number
\end_layout

\begin_layout Itemize
Mail address
\end_layout

\begin_layout Itemize
Preference over the notification channel (SMS, Mail or both)
\end_layout

\begin_layout Itemize
Driver Licence number and postcode
\end_layout

\end_deeper
\begin_layout Standard

\series bold
Exit conditions:
\series default
 The user receives the password and with it he/she can log in to the personal
 area of the mobile app.
\begin_inset Newline newline
\end_inset


\series bold
Exceptions: 
\end_layout

\begin_layout Itemize
The user is already registered.
\end_layout

\begin_layout Subsubsection
Class diagram
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Main.png
	lyxscale 40
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
The diagram is characterized by a Client-Server architecture in which the
 Server (System) is able to coordinate the car, the user and the external
 operator.
 The clients are the Car and User.
 The server is able to manage multiple clients at the same time.
 Moreover the whole service has been designed using some Patterns : the
 “monitoring” of the car has been solved through the Observer Pattern and
 the State Pattern has been used to manages the states of the service after
 log-in.
 The last pattern used is the the MVC.
 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Sequence diagrams
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ReservationSequence.png
	lyxscale 20
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
diagram representing the reservation process.
 After having logged in, from his/her app the user can search for a car.
 Once the system has elaborated and shown the list of cars, the user can
 reserve one.
 The reservation fails if the user has already made a reservation or inserts
 a reservation time longer than one hour.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename CarTempStop.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
diagram representing the real case when the user interrupts temporarily
 the service.
 After having turned off the car and locked it, the car system communicates
 the change of its status to the system.
 The car has been turned off and locked, this means that the user is contining
 to benefit from the service.
 So, there will be only a change of fee, depending on the position of the
 car, and consequently the ride object associated to the user and the car.
 After a while the user will came back and a specular sequence of operations
 is made: the system changes the status of the car and updates the fee and
 the information of the ride.
 Lastly, the user turns on the car, and continues his/her drive.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Accident.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
diagram representing the behavior of the whole system, in case of accident.
 When the user presses the emergency button on the car, this communicates
 to the system that there is a problem, and so a change of status of the
 car.
 The system turns off the car, to avoid further problems and possible user
 misbehaviors.
 Then the systems contacts an operator, giving the necessary informations
 about the accident: location, car status, and so on.
 The operator redirects the call directly to the user.
 After the conversation, which can even end abruptly (maybe the user suffered
 a sudden illness), the operator decides what to do and what resources have
 to be allocated and what other agents has to be called.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Activity diagram
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{adjustwidth}{-2.5cm}{-2cm}
\end_layout

\end_inset


\begin_inset Graphics
	filename EndOfService.png
	lyxscale 10
	scale 30

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{adjustwidth}
\end_layout

\end_inset

The diagram representing the system behavior, orientated towards a user-like
 vision of the problem, when the service ends.
 After the user has left the car and ended the service using the access
 code to unlock the car before picking it up after the reservation, the
 system begins the payment and notification procedure.
 After having changed the car status, that involves a major number of activities
 - such as car locking, change of the car tag, check of the car condition
 with possible interaction with external operators, database update -, the
 system proceeds calculating the real cost of the ride, that is the standard
 cost (SC = RideTime*StdFee + PauseTime*SpFee) on which all the possible
 bonuses are applied.
 This is followed by the effective payment of the ride, handled by the PSP
 of the system.
 This is not included in the diagram because from the point of view of the
 user, the system just have to handle the payment, doesn't care on how it
 does.
 However, the user needs to know if the payment was succesful, so the system
 sends him/her push notifications to inform him/her of the effective cost
 of the ride and the applied discounts and overcharges.
\end_layout

\begin_layout Subsubsection
State diagram
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ServiceState.png
	lyxscale 40
	scale 35

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
diagram representing the change of state of the service for a single user.
 In a real situation, the log in state of a user doesn't stay alive for
 the eternity, but after a fixed amount of time expires.
 Thus, the system needs to remember the last state of a user before the
 logout.
 As stated more times in this document, once logged in a user can reserve
 a car or monitor multiple cars.
 After the reservation follows the request of a code to access the car,
 the unlock and access to the car and the ride, that is a complex composed
 state (not shown in figure).
 Obviously, if the user doesn't pick up the car in time, there is no ride
 and the service ends.
 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Alloy
\end_layout

\begin_layout Subsection
Script of the model
\end_layout

\begin_layout Standard
open util/ boolean
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* ------- User and car definition --------*/ 
\begin_inset Newline newline
\end_inset

sig User {} 
\begin_inset Newline newline
\end_inset

sig Car { 
\end_layout

\begin_layout Standard
position: Position,
\end_layout

\begin_layout Standard
battery: Int
\begin_inset Newline newline
\end_inset

} {
\end_layout

\begin_layout Standard
battery > 0 and battery < 15
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// Two car cannot share the same position...they would be overlapping! 
\begin_inset Newline newline
\end_inset

fact uniquePositions { 
\end_layout

\begin_layout Standard
all disj c1, c2: Car | c1.position != c2.position
\begin_inset Newline newline
\end_inset

} 
\begin_inset Newline newline
\end_inset

/* -----------------------------------*/
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* --------- System definition -----------*/
\begin_inset Newline newline
\end_inset

one sig System { 
\end_layout

\begin_layout Standard
users: set User, 
\end_layout

\begin_layout Standard
cars: set Car, 
\end_layout

\begin_layout Standard
reservations: set Reservation, 
\end_layout

\begin_layout Standard
monitorings: set Monitoring, 
\end_layout

\begin_layout Standard
codeRequests: set CodeRequest,
\end_layout

\begin_layout Standard
rides: set Ride, 
\end_layout

\begin_layout Standard
safeAreas: set SafeArea
\begin_inset Newline newline
\end_inset

} { 
\end_layout

\begin_layout Standard
#cars >0 
\end_layout

\begin_layout Standard
#safeAreas > 0
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// The system contains all of the service objects
\begin_inset Newline newline
\end_inset

fact systemContainsAll { 
\end_layout

\begin_layout Standard
all u: User | u in System.users
\end_layout

\begin_layout Standard
all c: Car | c in System.cars
\end_layout

\begin_layout Standard
all r: Reservation | r in System.reservations 
\end_layout

\begin_layout Standard
all m: Monitoring | m in System.monitorings
\end_layout

\begin_layout Standard
all c: CodeRequest | c in System.codeRequests
\end_layout

\begin_layout Standard
all r: Ride | r in System.rides
\begin_inset Newline newline
\end_inset

} 
\begin_inset Newline newline
\end_inset

/* -----------------------------------*/
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* ----------- Service states ------------*/ 
\begin_inset Newline newline
\end_inset

sig Reservation { 
\end_layout

\begin_layout Standard
user: one User,
\end_layout

\begin_layout Standard
car: one Car 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

fact reservationUniqueness { 
\end_layout

\begin_layout Standard
// A user cannot make more than one reservation 
\end_layout

\begin_layout Standard
all disj r1, r2: Reservation | r1.user != r2.user
\end_layout

\begin_layout Standard
// A car cannot be reserved by more than one user
\end_layout

\begin_layout Standard
all disj r1, r2: Reservation | r1.car != r2.car 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

sig Monitoring {
\end_layout

\begin_layout Standard
mon_users: set User, 
\end_layout

\begin_layout Standard
mon_car: Car 
\begin_inset Newline newline
\end_inset

} {
\end_layout

\begin_layout Standard
#mon_users > 0 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// There are no multiple monitorings on the same car
\begin_inset Newline newline
\end_inset

fact oneMonitorForCar {
\end_layout

\begin_layout Standard
all disj m1, m2: Monitoring | m1.mon_car != m2.mon_car 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// Monitoring and reservations only on the permitted cars 
\begin_inset Newline newline
\end_inset

fact permittedCarsMonitorReservation { 
\end_layout

\begin_layout Standard
all m: Monitoring | m.mon_car in System.cars
\end_layout

\begin_layout Standard
all r: Reservation | r.car in System.cars 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// A user cannot be reserving a car and monitoring others
\begin_inset Newline newline
\end_inset

fact monitorOrReservation { 
\end_layout

\begin_layout Standard
all r: Reservation, m: Monitoring | #(r.user & m.mon_users) = 0 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// Asserts that not every user has made a reservation or is monitoring a
 car
\begin_inset Newline newline
\end_inset

assert someUserIdle {
\end_layout

\begin_layout Standard
some u: User | no r: Reservation, m: Monitoring | r.user = u and u in m.mon_users
 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset

 /* -----------------------------------*/
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* ---- Code request after a reservation ----*/
\begin_inset Newline newline
\end_inset

sig CodeRequest { 
\end_layout

\begin_layout Standard
user: one User,
\end_layout

\begin_layout Standard
accessCode: one Code 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

sig Code{}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// All the codes to access a car are unique 
\begin_inset Newline newline
\end_inset

fact codeUniqueness {
\end_layout

\begin_layout Standard
no disj c1, c2: CodeRequest | c1.accessCode = c2.accessCode 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* A user can request for an access code only if he/she has already made
 a reservation.
 Moreover, a user cannot make more than one reservation */ 
\begin_inset Newline newline
\end_inset

fact codeRequestFollowsReservation {
\end_layout

\begin_layout Standard
all c: CodeRequest | one r: Reservation | c.user = r.user 
\end_layout

\begin_layout Standard
all disj c1, c2: CodeRequest | c1.user != c2.user 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// All the codes of the world are generated only for a code request 
\begin_inset Newline newline
\end_inset

fact noUnusedCode {
\end_layout

\begin_layout Standard
#CodeRequest = #Code 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset

 /* -----------------------------------*/
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* -------------- Ride ----------------*/ 
\begin_inset Newline newline
\end_inset

sig Ride { 
\end_layout

\begin_layout Standard
user: User, 
\end_layout

\begin_layout Standard
car: Car, 
\end_layout

\begin_layout Standard
cost: Int, 
\end_layout

\begin_layout Standard
currentFee: Fee, 
\end_layout

\begin_layout Standard
rideDuration: Int, 
\end_layout

\begin_layout Standard
possibleBonuses: set Bonus, 
\end_layout

\begin_layout Standard
carStopped: Bool 
\begin_inset Newline newline
\end_inset

} { 
\end_layout

\begin_layout Standard
rideDuration > 0 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// A user cannot be in more than one ride and so does a car 
\begin_inset Newline newline
\end_inset

fact rideSingularity { 
\end_layout

\begin_layout Standard
all disj r1, r2: Ride | r1.user != r2.user and r1.car != r2.car 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// When the user is riding a car, the reservation and monitorings users
 are cancelled 
\begin_inset Newline newline
\end_inset

fact onceRidingReservationAndMonitoringExpire { 
\end_layout

\begin_layout Standard
all r: Ride, u: User, c: Car | r.user = u and r.car = c 
\end_layout

\begin_layout Standard
implies 
\end_layout

\begin_layout Standard
(no res: Reservation | res.user = u or res.car = c) 
\end_layout

\begin_layout Standard
and 
\end_layout

\begin_layout Standard
(no m: Monitoring | u in m.mon_users or m.car = c) 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

fact rideFeeConstraint { 
\end_layout

\begin_layout Standard
all r: Ride | (r.carStopped = True and r.car in SafeArea.parkedCars) implies
 r.currentFee = SafeAreaFee 
\end_layout

\begin_layout Standard
all r: Ride | (r.carStopped = True and r.car not in SafeArea.parkedCars) implies
 r.currentFee = StopFee
\end_layout

\begin_layout Standard
all r: Ride | r.carStopped = False implies r.currentFee = StandardFee 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// Even the code request should expire after the ride begins
\begin_inset Newline newline
\end_inset

assert rideImpliesNoCodeRequest { 
\end_layout

\begin_layout Standard
all r: Ride | no c: CodeRequest | r.user = c.user 
\begin_inset Newline newline
\end_inset

} 
\begin_inset Newline newline
\end_inset

/* -----------------------------------*/
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* --------- Accident description --------*/ 
\begin_inset Newline newline
\end_inset

sig Accident { 
\end_layout

\begin_layout Standard
unfortunateRide: one Ride, 
\end_layout

\begin_layout Standard
assignedOperators: set Operator 
\begin_inset Newline newline
\end_inset

} { 
\end_layout

\begin_layout Standard
#assignedOperators > 0 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

sig Operator{}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// An accident can occur only during a ride
\begin_inset Newline newline
\end_inset

fact noAccidentWithoutRide { 
\end_layout

\begin_layout Standard
all a: Accident | a.unfortunateRide.currentFee = SafeAreaFee 
\begin_inset Newline newline
\end_inset

} 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* ----------- Fee description ----------*/ 
\begin_inset Newline newline
\end_inset

abstract sig Fee{ 
\end_layout

\begin_layout Standard
fee: Int 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

one sig StopFee extends Fee{ 
\end_layout

\begin_layout Standard
stopMultiplier: Int 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

one sig SafeAreaFee extends Fee { 
\end_layout

\begin_layout Standard
safeMultiplier: Int 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

one sig StandardFee extends Fee {
\end_layout

\begin_layout Standard
standardMultiplier: Int 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* When stopping and leaving the car in a safe zone, the fee is zero.
 When leaving the car there is a small fee due to the continue use of the
 service.
 However, this fee is smaller than the one used during a ride because there
 is no battery consumption */ 
\begin_inset Newline newline
\end_inset

fact feeConstraints { 
\end_layout

\begin_layout Standard
StopFee.stopMultiplier > SafeAreaFee.safeMultiplier and 
\end_layout

\begin_layout Standard
StandardFee.standardMultiplier > StopFee.stopMultiplier and
\end_layout

\begin_layout Standard
SafeAreaFee.safeMultiplier = 0 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset

/* -----------------------------------*/
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* ----- Position and areas description ----*/
\begin_inset Newline newline
\end_inset

sig Position{
\end_layout

\begin_layout Standard
latitude: Int,
\end_layout

\begin_layout Standard
longitude: Int 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

sig SafeArea{ 
\end_layout

\begin_layout Standard
parkedCars: set Car, 
\end_layout

\begin_layout Standard
availablePositions: set Position 
\begin_inset Newline newline
\end_inset

}{ 
\end_layout

\begin_layout Standard
#availablePositions > 0 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

sig SpecialSafearea extends SafeArea{
\end_layout

\begin_layout Standard
availableChargers: Int 
\begin_inset Newline newline
\end_inset

} { 
\end_layout

\begin_layout Standard
availableChargers > 0 && availableChargers < 10 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// It is a third person/society that owns parking areas and can sell/buy
 it to/from our society 
\begin_inset Newline newline
\end_inset

sig Stakeholder { 
\end_layout

\begin_layout Standard
owned_areas: set SafeArea 
\begin_inset Newline newline
\end_inset

} { 
\end_layout

\begin_layout Standard
#owned_areas > 0 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// Safe areas is a set contained within the system and the stakeholders
 
\begin_inset Newline newline
\end_inset

fact safeAreaDomain { 
\end_layout

\begin_layout Standard
no s: SafeArea | s in Stakeholder.owned_areas and s in System.safeAreas
\end_layout

\begin_layout Standard
SafeArea = Stakeholder.owned_areas + System.safeAreas 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// A position that is in a safe area cannot appear in another safe area
 
\begin_inset Newline newline
\end_inset

fact allSafeAreaHaveDisjPositions { 
\end_layout

\begin_layout Standard
all s1, s2: SafeArea | s1!=s2 implies #(s1.availablePositions & s2.availablePositi
ons) = 0 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// The positions of the parked cars in a safe area are some of the positions
 available in such area 
\begin_inset Newline newline
\end_inset

fact parkedCarPositionInSafeAreaPositions { 
\end_layout

\begin_layout Standard
all s: SafeArea | s.parkedCars.position in s.availablePositions 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// There isn't any car parked in the stakeholders areas 
\begin_inset Newline newline
\end_inset

fact noServiceInStakeholderAreas { 
\end_layout

\begin_layout Standard
no c: Car | c in Stakeholder.owned_areas.parkedCars 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// There should not be any position in a stakeholder area, given the previous
 assumptions
\begin_inset Newline newline
\end_inset

assert noCarPositionInStakeholderSafeAreas { 
\end_layout

\begin_layout Standard
no c: Car | c.position in Stakeholder.owned_areas.availablePositions 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// Predicates the addition of a safe area to the system, sold by some stakeholde
r
\begin_inset Newline newline
\end_inset

pred addSafeArea[sa: SafeArea, s,s': System, st,st': Stakeholder] { 
\end_layout

\begin_layout Standard
sa in st.owned_areas and sa not in s.safeAreas 
\end_layout

\begin_layout Standard
implies 
\end_layout

\begin_layout Standard
st'.owned_areas = st.owned_areas - sa and s'.safeAreas = s.safeAreas + sa 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// Predicates the subtraction of a safe area from the system, bought by
 some stakeholder
\begin_inset Newline newline
\end_inset

pred delSafeArea[sa: SafeArea, s,s': System, st,st': Stakeholder] { 
\end_layout

\begin_layout Standard
sa not in st.owned_areas and sa in s.safeAreas
\end_layout

\begin_layout Standard
implies
\end_layout

\begin_layout Standard
st'.owned_areas = st.owned_areas + sa and s'.safeAreas = s.safeAreas - sa 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// Predicates the parking of a car in a safe area
\begin_inset Newline newline
\end_inset

pred parkingCar[c: Car, s,s': SafeArea] { 
\end_layout

\begin_layout Standard
c not in SafeArea.parkedCars and c.position in s.availablePositions
\end_layout

\begin_layout Standard
implies
\end_layout

\begin_layout Standard
s'.parkedCars = s.parkedCars + c 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

// Predicates the leaving of a car from a parking zone
\begin_inset Newline newline
\end_inset

pred leavingCar[c: Car, s,s': SafeArea] { 
\end_layout

\begin_layout Standard
c in s.parkedCars and c.position in s.availablePositions
\end_layout

\begin_layout Standard
implies
\end_layout

\begin_layout Standard
s'.parkedCars = s.parkedCars - c and c not in SafeArea.parkedCars and c.position
 in s'.availablePositions 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset

 /* -----------------------------------*/
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* ------ Some bonuses description ------*/ 
\begin_inset Newline newline
\end_inset

abstract sig Bonus {}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

one sig HighBattery extends Bonus { 
\end_layout

\begin_layout Standard
discount = 10 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

 one sig LowBattery extends Bonus { 
\end_layout

\begin_layout Standard
overcharge = 15 
\begin_inset Newline newline
\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

/* If during a ride a car has more than 10 battery (50%) the user may get
 a discount if the condition persists.
 On the other side if during a ride a car has less than 5 battery (20%),
 the user may incur in a 30% overcharge if the condition persists */ 
\begin_inset Newline newline
\end_inset

fact possibleBonusesPerRide { 
\end_layout

\begin_layout Standard
all r: Ride | r.car.battery > 10 implies (HighBattery in r.possibleBonuses
 and #r.possibleBonuses = 1)
\end_layout

\begin_layout Standard
all r: Ride | r.car.battery < 5 implies LowBattery in r.possibleBonuses and
 #r.possibleBonuses = 1 all r: Ride | (r.car.battery >= 5 and r.car.battery <=
 10) implies #r.possibleBonuses = 0 }
\end_layout

\begin_layout Standard
/* A car should not have both bonuses related to the battery percentage
 */ assert noRideHasBothBatteryBonuses { no r: Ride | HighBattery in r.possibleBo
nuses and LowBattery in r.possibleBonuses } /* ----------------------------------
-*/
\end_layout

\begin_layout Standard
/* Utilities constraints.
 - Sum of #Ride and #Reservation < #User - Sum of #Ride and #Reservation
 < #Car - #CodeRequest < #Reservation */ fact { #User = 6 #Reservation =2
 #CodeRequest = 1 #Monitoring < 3 && #Monitoring > 0 #Ride = 2 #SafeArea
 = 2 #Operator < 3 #Accident = 1 #Stakeholder = 1 some r: Reservation |
 r.car in SafeArea.parkedCars some p: Position | p not in SafeArea.availablePositio
ns some r: Ride | r.car.position in System.safeAreas.availablePositions some
 r: Ride | LowBattery in r.possibleBonuses some c: Car | c.battery < 5 some
 c: Car | c.battery > 10 }
\end_layout

\begin_layout Standard
pred show[] {}
\end_layout

\begin_layout Standard
//Utility assertion assert someResOutArea { some r: Reservation | r.car.position
 not in SafeArea.availablePositions }
\end_layout

\begin_layout Standard
// World controls and check check someResOutArea check rideImpliesNoCodeRequest
 check someUserIdle check noRideHasBothBatteryBonuses check noCarPositionInStake
holderSafeAreas run addSafeArea for 7 but 5 Int run delSafeArea for 7 but
 5 Int run parkingCar for 7 but 5 Int run leavingCar for 7 but 5 Int run
 show for 7 but 5 Int 
\end_layout

\end_body
\end_document
